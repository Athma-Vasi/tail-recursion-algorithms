// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Array from "@rescript/core/src/Core__Array.res.js";
import * as Core__Option from "@rescript/core/src/Core__Option.res.js";

function findTheLosersOfTheCircularGame(n, k) {
  var makeRange = function (max) {
    var _range = [];
    var _num = 1;
    while(true) {
      var num = _num;
      var range = _range;
      if (num === (max + 1 | 0)) {
        return range;
      }
      _num = num + 1 | 0;
      _range = range.concat([num]);
      continue ;
    };
  };
  var players = makeRange(n);
  var scoreTable = Core__Array.reduceWithIndex(players, new Map(), (function (acc, _num, index) {
          acc.set(index + 1 | 0, 0);
          return acc;
        }));
  var _count = 0;
  var _index = 0;
  while(true) {
    var index = _index;
    var count = _count;
    var player = Core__Option.mapOr(players.at(index), 0, (function (p) {
            return p;
          }));
    var score = Core__Option.mapOr(scoreTable.get(player), 0, (function (s) {
            return s;
          }));
    console.log("\n");
    console.log("--play--");
    console.log("count: ", count);
    console.log("scoreTable: ", scoreTable);
    console.log("index: ", index);
    console.log("player: ", player);
    console.log("score: ", score);
    if ((score + 1 | 0) > 1) {
      return scoreTable;
    }
    var iterationCount = Math.imul(count, k);
    var newIndex = (index + iterationCount | 0) % n | 0;
    var newPlayer = Core__Option.mapOr(players.at(newIndex), 0, (function (p) {
            return p;
          }));
    var newScore = Core__Option.mapOr(scoreTable.get(newPlayer), 1, (function (s) {
            return s + 1 | 0;
          }));
    scoreTable.set(newPlayer, newScore);
    console.log("\n");
    console.log("iterationCount: ", iterationCount);
    console.log("newIndex: ", newIndex);
    console.log("newPlayer: ", newPlayer);
    console.log("newScore: ", newScore);
    console.log("scoreTable: ", scoreTable);
    _index = newIndex;
    _count = count + 1 | 0;
    continue ;
  };
}

var r1 = findTheLosersOfTheCircularGame(5, 2);

console.log("r1: ", r1);

var n1 = 5;

var k1 = 2;

export {
  findTheLosersOfTheCircularGame ,
  n1 ,
  k1 ,
  r1 ,
}
/* r1 Not a pure module */
