// Generated by ReScript, PLEASE EDIT WITH CARE


function firstUniqueCharInString(str) {
  var strLength = str.length;
  var makeTableAndQueue = function (_charQueue, freqTable, _index) {
    while(true) {
      var index = _index;
      var charQueue = _charQueue;
      if (index === strLength) {
        return [
                charQueue,
                freqTable
              ];
      }
      var $$char = str.charAt(index);
      var count = freqTable.get($$char);
      var existingFreq = count !== undefined ? count : 0;
      freqTable.set($$char, existingFreq + 1 | 0);
      _index = index + 1 | 0;
      _charQueue = charQueue.concat([$$char]);
      continue ;
    };
  };
  var match = makeTableAndQueue([], new Map(), 0);
  var freqTable = match[1];
  var _charQueue = match[0];
  var _index = 0;
  while(true) {
    var index = _index;
    var charQueue = _charQueue;
    var queueLength = charQueue.length;
    if (queueLength === 0) {
      return -1;
    }
    var $$char = charQueue.at(0);
    var firstChar = $$char !== undefined ? $$char : "";
    var count = freqTable.get(firstChar);
    var charFreq = count !== undefined ? count : -1;
    if (charFreq === 1) {
      return index;
    }
    _index = index + 1 | 0;
    _charQueue = charQueue.slice(1, queueLength);
    continue ;
  };
}

var s1 = "leetcode";

var r1 = firstUniqueCharInString(s1);

console.log("r1: ", r1);

var s2 = "loveleetcode";

var r2 = firstUniqueCharInString(s2);

console.log("r2: ", r2);

var s3 = "aabb";

var r3 = firstUniqueCharInString(s3);

console.log("r3: ", r3);

export {
  firstUniqueCharInString ,
  s1 ,
  r1 ,
  s2 ,
  r2 ,
  s3 ,
  r3 ,
}
/* r1 Not a pure module */
