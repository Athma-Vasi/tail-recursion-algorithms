// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Int from "@rescript/core/src/Core__Int.res.js";

function minElementAfterReplacementWithDigitSum(nums) {
  var outerLoop = function (_result, _index) {
    while(true) {
      var index = _index;
      var result = _result;
      if (index === nums.length) {
        return result;
      }
      var n = nums.at(index);
      var num = n !== undefined ? n : -1;
      var numStr = num.toString();
      var innerLoop = (function(numStr){
      return function innerLoop(_sum, _strIndex) {
        while(true) {
          var strIndex = _strIndex;
          var sum = _sum;
          if (strIndex === numStr.length) {
            return sum;
          }
          var $$char = numStr.charAt(strIndex);
          var n = Core__Int.fromString($$char, undefined);
          var numChar = n !== undefined ? n : -1;
          _strIndex = strIndex + 1 | 0;
          _sum = sum + numChar | 0;
          continue ;
        };
      }
      }(numStr));
      var sum = innerLoop(0, 0);
      _index = index + 1 | 0;
      _result = result.concat([sum]);
      continue ;
    };
  };
  var arr = outerLoop([], 0).toSorted(function (a, b) {
          return a - b | 0;
        }).at(0);
  if (arr !== undefined) {
    return arr;
  } else {
    return -1;
  }
}

var n1 = [
  10,
  12,
  13,
  14
];

var r1 = minElementAfterReplacementWithDigitSum(n1);

console.log("r1: ", r1);

var n2 = [
  1,
  2,
  3,
  4
];

var r2 = minElementAfterReplacementWithDigitSum(n2);

console.log("r2: ", r2);

var n3 = [
  999,
  19,
  199
];

var r3 = minElementAfterReplacementWithDigitSum(n3);

console.log("r3: ", r3);

export {
  minElementAfterReplacementWithDigitSum ,
  n1 ,
  r1 ,
  n2 ,
  r2 ,
  n3 ,
  r3 ,
}
/* r1 Not a pure module */
