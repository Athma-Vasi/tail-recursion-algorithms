// Generated by ReScript, PLEASE EDIT WITH CARE


function minStepsToMakeTwoStringsAnagram(s, t) {
  var makeFreqTable = function (freqTable, str1, str2, _index) {
    while(true) {
      var index = _index;
      if (index === str1.length) {
        return freqTable;
      }
      var char1 = str1.charAt(index);
      var char2 = str2.charAt(index);
      var f = freqTable.get(char1);
      var freq1 = f !== undefined ? f + 1 | 0 : 1;
      var f$1 = freqTable.get(char2);
      var freq2 = f$1 !== undefined ? f$1 : 0;
      freqTable.set(char1, freq1 - freq2 | 0);
      _index = index + 1 | 0;
      continue ;
    };
  };
  var freqTable = makeFreqTable(new Map(), s, t, 0);
  console.log("\n");
  console.log("freqTable: ", freqTable);
  var _minSteps = 0;
  var tuples = Array.from(freqTable.entries());
  var _index = 0;
  while(true) {
    var index = _index;
    var minSteps = _minSteps;
    if (index === tuples.length) {
      return minSteps;
    }
    var t$1 = tuples.at(index);
    var match = t$1 !== undefined ? t$1 : [
        String(),
        0
      ];
    var freq = match[1];
    console.log("\n");
    console.log("--findMinSteps--");
    console.log("minSteps: ", minSteps);
    console.log("tuples: ", tuples);
    console.log("index: ", index);
    console.log("char: ", match[0]);
    console.log("freq: ", freq);
    _index = index + 1 | 0;
    _minSteps = minSteps + freq | 0;
    continue ;
  };
}

var s1 = "bab";

var t1 = "aba";

var r1 = minStepsToMakeTwoStringsAnagram(s1, t1);

console.log("r1: ", r1);

export {
  minStepsToMakeTwoStringsAnagram ,
  s1 ,
  t1 ,
  r1 ,
}
/* r1 Not a pure module */
