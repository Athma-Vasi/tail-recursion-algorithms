// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";
import * as Core__Array from "@rescript/core/src/Core__Array.res.js";

function countElementsWithMaxFrequency(nums) {
  var makeFreqTable = function (freqTable, _index) {
    while(true) {
      var index = _index;
      if (index === nums.length) {
        return freqTable;
      }
      var n = nums.at(index);
      var num = n !== undefined ? n : 0;
      var c = freqTable.get(num);
      var existingCount = c !== undefined ? c : 0;
      freqTable.set(num, existingCount + 1 | 0);
      _index = index + 1 | 0;
      continue ;
    };
  };
  var freqTable = makeFreqTable(new Map(), 0);
  var freqValues = Array.from(freqTable.values());
  var maxFreq = Core__Array.reduce(freqValues, Int32.min_int, (function (maxFreq, freq) {
          if (freq > maxFreq) {
            return freq;
          } else {
            return maxFreq;
          }
        }));
  var maxFreqCount = Core__Array.reduce(freqValues, 0, (function (maxFreqCount, freq) {
          if (freq === maxFreq) {
            return maxFreqCount + 1 | 0;
          } else {
            return maxFreqCount;
          }
        }));
  return Math.imul(maxFreq, maxFreqCount);
}

var n1 = [
  1,
  2,
  2,
  3,
  1,
  4
];

var r1 = countElementsWithMaxFrequency(n1);

console.log("r1: ", r1);

var n2 = [
  1,
  2,
  3,
  4,
  5
];

var r2 = countElementsWithMaxFrequency(n2);

console.log("r2: ", r2);

export {
  countElementsWithMaxFrequency ,
  n1 ,
  r1 ,
  n2 ,
  r2 ,
}
/* r1 Not a pure module */
