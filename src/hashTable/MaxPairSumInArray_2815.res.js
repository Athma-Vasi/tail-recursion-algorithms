// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";

function maxPairSumInArray(nums) {
  var getMaxDigit = function (_maxDigit, _num) {
    while(true) {
      var num = _num;
      var maxDigit = _maxDigit;
      if (num <= 0.0) {
        return maxDigit;
      }
      var mod = num % 10.0;
      var reduced = (num - mod) / 10.0;
      _num = reduced;
      _maxDigit = maxDigit > mod ? maxDigit : mod;
      continue ;
    };
  };
  var _max = -1;
  var maxTable = new Map();
  var _index = 0;
  while(true) {
    var index = _index;
    var max = _max;
    if (index === nums.length) {
      return max;
    }
    var n = nums.at(index);
    var num = n !== undefined ? n : 0;
    var maxDigit = getMaxDigit(Int32.min_int, num);
    var n$1 = maxTable.get(maxDigit);
    var pair = n$1 !== undefined ? n$1 : Int32.min_int;
    if (pair === Int32.min_int) {
      maxTable.set(maxDigit, num);
    } else {
      maxTable.set(maxDigit, num > pair ? num : pair);
    }
    _index = index + 1 | 0;
    _max = max > (num + pair | 0) ? max : num + pair | 0;
    continue ;
  };
}

var n1 = [
  112,
  131,
  411
];

var r1 = maxPairSumInArray(n1);

console.log("r1: ", r1);

var n2 = [
  2536,
  1613,
  3366,
  162
];

var r2 = maxPairSumInArray(n2);

console.log("r2: ", r2);

var n3 = [
  51,
  71,
  17,
  24,
  42
];

var r3 = maxPairSumInArray(n3);

console.log("r3: ", r3);

export {
  maxPairSumInArray ,
  n1 ,
  r1 ,
  n2 ,
  r2 ,
  n3 ,
  r3 ,
}
/* r1 Not a pure module */
