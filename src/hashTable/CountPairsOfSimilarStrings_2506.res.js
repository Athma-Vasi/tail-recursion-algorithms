// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml from "rescript/lib/es6/caml.js";
import * as Core__Array from "@rescript/core/src/Core__Array.res.js";
import * as Core__Option from "@rescript/core/src/Core__Option.res.js";

function countPairsOfSimilarStrings(words) {
  var uniques = Core__Array.reduce(words, [], (function (accum, word) {
          var unique = Array.from(Core__Array.reduce(word.split(""), new Set(), (function (acc, $$char) {
                            acc.add($$char);
                            return acc;
                          })).values()).toSorted(Caml.string_compare).join("");
          return accum.concat([unique]);
        }));
  var pairs = Core__Array.reduce(uniques, new Map(), (function (acc, unique) {
          var count = Core__Option.mapOr(acc.get(unique), 1, (function (u) {
                  return u + 1 | 0;
                }));
          acc.set(unique, count);
          return acc;
        }));
  return Core__Array.reduce(Array.from(pairs.values()), 0, (function (acc, count) {
                return acc + (Math.imul(count, count - 1 | 0) / 2 | 0) | 0;
              }));
}

var w1 = [
  "aba",
  "aabb",
  "abcd",
  "bac",
  "aabc"
];

var r1 = countPairsOfSimilarStrings(w1);

console.log("r1: ", r1);

var w2 = [
  "aabb",
  "ab",
  "ba"
];

var r2 = countPairsOfSimilarStrings(w2);

console.log("r2: ", r2);

var w3 = [
  "nba",
  "cba",
  "dba"
];

var r3 = countPairsOfSimilarStrings(w3);

console.log("r3: ", r3);

export {
  countPairsOfSimilarStrings ,
  w1 ,
  r1 ,
  w2 ,
  r2 ,
  w3 ,
  r3 ,
}
/* r1 Not a pure module */
