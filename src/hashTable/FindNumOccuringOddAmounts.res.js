// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";

function findNumOccuringOddAmounts(nums) {
  var makeFreqTable = function (freqTable, _index) {
    while(true) {
      var index = _index;
      if (index === nums.length) {
        return freqTable;
      }
      var n = nums.at(index);
      var num = n !== undefined ? n : Int32.min_int;
      var f = freqTable.get(num);
      var existingFreq = f !== undefined ? f : 0;
      freqTable.set(num, existingFreq + 1 | 0);
      _index = index + 1 | 0;
      continue ;
    };
  };
  var freqTable = makeFreqTable(new Map(), 0);
  var tuples = Array.from(freqTable.entries());
  var _foundNum = -1;
  var _index = 0;
  while(true) {
    var index = _index;
    var foundNum = _foundNum;
    var arr = tuples.at(index);
    var match = arr !== undefined ? arr : [
        -1,
        -1
      ];
    var isNumFreqEven = match[1] % 2.0 === 0.0;
    if (index === tuples.length) {
      return foundNum;
    }
    if (isNumFreqEven) {
      _index = index + 1 | 0;
      continue ;
    }
    _index = index + 1 | 0;
    _foundNum = match[0];
    continue ;
  };
}

var n1 = [
  1,
  2,
  3,
  2,
  3,
  1,
  3
];

var r1 = findNumOccuringOddAmounts(n1);

console.log("r1: ", r1);

var n2 = [
  5,
  7,
  2,
  7,
  5,
  2,
  5
];

var r2 = findNumOccuringOddAmounts(n2);

console.log("r2: ", r2);

export {
  findNumOccuringOddAmounts ,
  n1 ,
  r1 ,
  n2 ,
  r2 ,
}
/* r1 Not a pure module */
