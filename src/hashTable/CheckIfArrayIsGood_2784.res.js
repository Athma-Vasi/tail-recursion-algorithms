// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";
import * as Core__Array from "@rescript/core/src/Core__Array.res.js";
import * as Core__Option from "@rescript/core/src/Core__Option.res.js";

function checkIfArrayIsGood(nums) {
  var makeFreqTable = function (freqTable, _index) {
    while(true) {
      var index = _index;
      if (index === nums.length) {
        return freqTable;
      }
      var num = Core__Option.mapOr(nums.at(index), 0, (function (n) {
              return n;
            }));
      var freq = Core__Option.mapOr(freqTable.get(num), 1, (function (c) {
              return c + 1 | 0;
            }));
      freqTable.set(num, freq);
      _index = index + 1 | 0;
      continue ;
    };
  };
  var freqTable = makeFreqTable(new Map(), 0);
  var length = nums.length;
  var max = Core__Array.reduce(nums, Int32.min_int, (function (acc, num) {
          if (acc > num) {
            return acc;
          } else {
            return num;
          }
        }));
  var correctLength = max + 1 | 0;
  if (length === correctLength) {
    var _isGood = false;
    var _index = 0;
    while(true) {
      var index = _index;
      var isGood = _isGood;
      if (index === length) {
        return isGood;
      }
      var num = Core__Option.mapOr(nums.at(index), 0, (function (n) {
              return n;
            }));
      var freq = Core__Option.mapOr(freqTable.get(num), 0, (function (c) {
              return c;
            }));
      _index = index + 1 | 0;
      _isGood = num === max && freq === 2 || num !== max && freq === 1;
      continue ;
    };
  } else {
    return false;
  }
}

var n1 = [
  2,
  1,
  3
];

var r1 = checkIfArrayIsGood(n1);

console.log("r1: ", r1);

var n2 = [
  1,
  3,
  3,
  2
];

var r2 = checkIfArrayIsGood(n2);

console.log("r2: ", r2);

var n3 = [
  1,
  1
];

var r3 = checkIfArrayIsGood(n3);

console.log("r3: ", r3);

var n4 = [
  3,
  4,
  4,
  1,
  2,
  1
];

var r4 = checkIfArrayIsGood(n4);

console.log("r4: ", r4);

export {
  checkIfArrayIsGood ,
  n1 ,
  r1 ,
  n2 ,
  r2 ,
  n3 ,
  r3 ,
  n4 ,
  r4 ,
}
/* r1 Not a pure module */
