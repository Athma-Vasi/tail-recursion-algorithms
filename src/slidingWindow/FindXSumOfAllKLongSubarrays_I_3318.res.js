// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Array from "@rescript/core/src/Core__Array.res.js";

function findXSumOfAllKLongSubarrays(nums, k, x) {
  var calculateSum = function (freqTable) {
    var sortedTuples = Array.from(freqTable.entries()).toSorted(function (param, param$1) {
          var b2 = param$1[1];
          var a2 = param[1];
          if (b2 === a2) {
            return param$1[0] - param[0] | 0;
          } else {
            return b2 - a2 | 0;
          }
        });
    return Core__Array.reduceWithIndex(sortedTuples, 0, (function (acc, tuple, index) {
                  if ((index + 1 | 0) > x) {
                    return acc;
                  } else {
                    return acc + Math.imul(tuple[0], tuple[1]) | 0;
                  }
                }));
  };
  var expandWindow = function (result, freqTable, _width) {
    while(true) {
      var width = _width;
      if (width === k) {
        return [
                result.concat([calculateSum(freqTable)]),
                freqTable
              ];
      }
      var n = nums.at(width);
      var num = n !== undefined ? n : 0;
      var f = freqTable.get(num);
      var frequency = f !== undefined ? f : 0;
      freqTable.set(num, frequency + 1 | 0);
      _width = width + 1 | 0;
      continue ;
    };
  };
  var match = expandWindow([], new Map(), 0);
  var _result = match[0];
  var freqTable = match[1];
  var _left = 0;
  var _right = k;
  while(true) {
    var right = _right;
    var left = _left;
    var result = _result;
    if (right === nums.length) {
      return result;
    }
    var n = nums.at(left);
    var leftNum = n !== undefined ? n : -1;
    var f = freqTable.get(leftNum);
    var leftNumFreq = f !== undefined ? f : -1;
    if (leftNumFreq === 1) {
      freqTable.delete(leftNum);
    } else {
      freqTable.set(leftNum, leftNumFreq - 1 | 0);
    }
    var n$1 = nums.at(right);
    var rightNum = n$1 !== undefined ? n$1 : -1;
    var f$1 = freqTable.get(rightNum);
    var rightNumFreq = f$1 !== undefined ? f$1 : 0;
    freqTable.set(rightNum, rightNumFreq + 1 | 0);
    _right = right + 1 | 0;
    _left = left + 1 | 0;
    _result = result.concat([calculateSum(freqTable)]);
    continue ;
  };
}

var n1 = [
  1,
  1,
  2,
  2,
  3,
  4,
  2,
  3
];

var r1 = findXSumOfAllKLongSubarrays(n1, 6, 2);

console.log("r1: ", r1);

var n2 = [
  3,
  8,
  7,
  8,
  7,
  5
];

var r2 = findXSumOfAllKLongSubarrays(n2, 2, 2);

console.log("r2: ", r2);

var k1 = 6;

var x1 = 2;

var k2 = 2;

var x2 = 2;

export {
  findXSumOfAllKLongSubarrays ,
  n1 ,
  k1 ,
  x1 ,
  r1 ,
  n2 ,
  k2 ,
  x2 ,
  r2 ,
}
/* r1 Not a pure module */
