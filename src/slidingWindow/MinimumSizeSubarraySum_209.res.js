// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";
import * as Core__Array from "@rescript/core/src/Core__Array.res.js";

function minimumSizeSubarraySum(nums, target) {
  var initialSum = Core__Array.reduceWithIndex(nums, 0, (function (acc, curr, idx) {
          if (idx > 1) {
            return acc;
          } else {
            return acc + curr | 0;
          }
        }));
  var _minSize = Int32.max_int;
  var _sum = initialSum;
  var _leftIndex = 0;
  var _rightIndex = 2;
  while(true) {
    var rightIndex = _rightIndex;
    var leftIndex = _leftIndex;
    var sum = _sum;
    var minSize = _minSize;
    if (rightIndex === nums.length) {
      if (minSize === Int32.max_int) {
        return 0;
      } else {
        return minSize;
      }
    }
    if (leftIndex === rightIndex) {
      _rightIndex = rightIndex + 1 | 0;
      continue ;
    }
    var n = nums.at(rightIndex);
    var rightIncludedNum = n !== undefined ? n : Int32.min_int;
    if (rightIncludedNum === target) {
      return 1;
    }
    var newSum = sum + rightIncludedNum | 0;
    if (newSum < target) {
      _rightIndex = rightIndex + 1 | 0;
      _sum = newSum;
      continue ;
    }
    var n$1 = nums.at(leftIndex);
    var leftExcludedNum = n$1 !== undefined ? n$1 : Int32.min_int;
    var newMinSize = (rightIndex - leftIndex | 0) + 1 | 0;
    _leftIndex = leftIndex + 1 | 0;
    _sum = sum - leftExcludedNum | 0;
    _minSize = newMinSize < minSize ? newMinSize : minSize;
    continue ;
  };
}

var a1 = [
  2,
  3,
  1,
  2,
  4,
  3
];

var r1 = minimumSizeSubarraySum(a1, 7);

console.log("r1: ", r1, r1 === 2);

var a2 = [
  1,
  4,
  4
];

var r2 = minimumSizeSubarraySum(a2, 4);

console.log("r2: ", r2, r2 === 1);

var a3 = [
  1,
  1,
  1,
  1,
  1,
  1,
  1,
  1
];

var r3 = minimumSizeSubarraySum(a3, 11);

console.log("r3: ", r3, r3 === 0);

var t1 = 7;

var t2 = 4;

var t3 = 11;

export {
  minimumSizeSubarraySum ,
  a1 ,
  t1 ,
  r1 ,
  a2 ,
  t2 ,
  r2 ,
  a3 ,
  t3 ,
  r3 ,
}
/* r1 Not a pure module */
