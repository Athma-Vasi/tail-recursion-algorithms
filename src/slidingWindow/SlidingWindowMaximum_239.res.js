// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";

function slidingWindowMaximum(numbers, windowSize) {
  var length = numbers.length;
  var updateMonoDecrStack = function (_monoDecrStack, numToPush) {
    while(true) {
      var monoDecrStack = _monoDecrStack;
      var stackLength = monoDecrStack.length;
      var num = monoDecrStack.at(-1);
      var prevMaximum = num !== undefined ? num : Int32.min_int;
      if (prevMaximum > numToPush) {
        return monoDecrStack;
      }
      if (stackLength < 1) {
        return monoDecrStack.concat([numToPush]);
      }
      _monoDecrStack = monoDecrStack.slice(0, stackLength - 1 | 0);
      continue ;
    };
  };
  var expandWindow = function (_monoDecrStack, _index) {
    while(true) {
      var index = _index;
      var monoDecrStack = _monoDecrStack;
      if (index === windowSize) {
        return monoDecrStack;
      }
      var num = numbers[index];
      var currentNum = num !== undefined ? num : Int32.min_int + 1 | 0;
      var updatedMonoDecrStack = updateMonoDecrStack(monoDecrStack, currentNum);
      _index = index + 1 | 0;
      _monoDecrStack = updatedMonoDecrStack;
      continue ;
    };
  };
  var updatedMonoDecrStack = expandWindow([], 0);
  var num = updatedMonoDecrStack.at(-1);
  var maximum = num !== undefined ? num : Int32.min_int;
  var maximumArrays = [].concat([maximum]);
  var _maximumArrays = maximumArrays;
  var _monoDecrStack = updatedMonoDecrStack;
  var _leftIndex = 1;
  var _rightIndex = windowSize;
  while(true) {
    var rightIndex = _rightIndex;
    var leftIndex = _leftIndex;
    var monoDecrStack = _monoDecrStack;
    var maximumArrays$1 = _maximumArrays;
    if (rightIndex === length) {
      return maximumArrays$1;
    }
    var num$1 = numbers[rightIndex];
    var rightIncludedNum = num$1 !== undefined ? num$1 : Int32.min_int;
    var rightUpdatedMonoDecrStack = updateMonoDecrStack(monoDecrStack, rightIncludedNum);
    var num$2 = rightUpdatedMonoDecrStack.at(-1);
    var maximum$1 = num$2 !== undefined ? num$2 : Int32.min_int;
    _rightIndex = rightIndex + 1 | 0;
    _leftIndex = leftIndex + 1 | 0;
    _monoDecrStack = rightUpdatedMonoDecrStack;
    _maximumArrays = maximumArrays$1.concat([maximum$1]);
    continue ;
  };
}

console.log(slidingWindowMaximum([
          1,
          3,
          -1,
          -3,
          5,
          3,
          6,
          7
        ], 3));

console.log(slidingWindowMaximum([1], 1));

export {
  slidingWindowMaximum ,
}
/*  Not a pure module */
