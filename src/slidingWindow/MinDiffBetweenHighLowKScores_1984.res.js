// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";

function minDiffBetweenHighLowKScores(nums, k) {
  var length = nums.length;
  var sorted = nums.map(function (num) {
        return num;
      });
  sorted.sort(function (a, b) {
        return a - b | 0;
      });
  var findAbsDiff = function (leftNum, rightNum) {
    var diff = leftNum - rightNum | 0;
    if (diff < 0) {
      return Math.imul(diff, -1);
    } else {
      return diff;
    }
  };
  var expandWindow = function (_minDiff, _index, leftNum) {
    while(true) {
      var index = _index;
      var minDiff = _minDiff;
      if (index === k) {
        return minDiff;
      }
      var num = nums.at(index);
      var currentNum = num !== undefined ? num : Int32.min_int;
      var absDiff = findAbsDiff(leftNum, currentNum);
      _index = index + 1 | 0;
      _minDiff = absDiff < minDiff ? absDiff : minDiff;
      continue ;
    };
  };
  var loop = function (_minDiff, _leftIndex, _rightIndex) {
    while(true) {
      var rightIndex = _rightIndex;
      var leftIndex = _leftIndex;
      var minDiff = _minDiff;
      if (rightIndex === length) {
        return minDiff;
      }
      var num = sorted.at(leftIndex);
      var leftNum = num !== undefined ? num : Int32.min_int;
      var num$1 = sorted.at(rightIndex);
      var rightNum = num$1 !== undefined ? num$1 : Int32.min_int + 1 | 0;
      var absDiff = findAbsDiff(leftNum, rightNum);
      _rightIndex = rightIndex + 1 | 0;
      _leftIndex = leftIndex + 1 | 0;
      _minDiff = absDiff < minDiff ? absDiff : minDiff;
      continue ;
    };
  };
  var num = sorted.at(0);
  var firstNum = num !== undefined ? num : Int32.min_int;
  var minDiff = loop(expandWindow(Int32.max_int, 1, firstNum), 1, k);
  if (minDiff === Int32.max_int) {
    return 0;
  } else {
    return minDiff;
  }
}

var n1 = [90];

var r1 = minDiffBetweenHighLowKScores(n1, 1);

console.log("r1: ", r1);

var n2 = [
  9,
  4,
  1,
  7
];

var r2 = minDiffBetweenHighLowKScores(n2, 2);

console.log("r2: ", r2);

var k1 = 1;

var k2 = 2;

export {
  minDiffBetweenHighLowKScores ,
  n1 ,
  k1 ,
  r1 ,
  n2 ,
  k2 ,
  r2 ,
}
/* r1 Not a pure module */
