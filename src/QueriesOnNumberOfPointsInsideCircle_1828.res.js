// Generated by ReScript, PLEASE EDIT WITH CARE


function queriesOnNumberOfPointsInsideCircle(points, queries) {
  var _result = [];
  var _qIndex = 0;
  while(true) {
    var qIndex = _qIndex;
    var result = _result;
    if (qIndex === queries.length) {
      return result;
    }
    var t = queries.at(qIndex);
    var match = t !== undefined ? t : [
        0,
        0,
        0
      ];
    var radius = match[2];
    var y = match[1];
    var x = match[0];
    var pointsLoop = (function(x,y,radius){
    return function pointsLoop(_count, _pIndex) {
      while(true) {
        var pIndex = _pIndex;
        var count = _count;
        if (pIndex === points.length) {
          return count;
        }
        var t = points.at(pIndex);
        var match = t !== undefined ? t : [
            0,
            0
          ];
        var b = match[1];
        var a = match[0];
        var distance = Math.imul(x - a | 0, x - a | 0) + Math.imul(y - b | 0, y - b | 0) | 0;
        var isInside = distance <= Math.imul(radius, radius);
        _pIndex = pIndex + 1 | 0;
        _count = isInside ? count + 1 | 0 : count;
        continue ;
      };
    }
    }(x,y,radius));
    var count = pointsLoop(0, 0);
    _qIndex = qIndex + 1 | 0;
    _result = result.concat([count]);
    continue ;
  };
}

var p1 = [
  [
    1,
    3
  ],
  [
    3,
    3
  ],
  [
    5,
    3
  ],
  [
    2,
    2
  ]
];

var q1 = [
  [
    2,
    3,
    1
  ],
  [
    4,
    3,
    1
  ],
  [
    1,
    1,
    2
  ]
];

var r1 = queriesOnNumberOfPointsInsideCircle(p1, q1);

console.log("r1: ", r1);

var p2 = [
  [
    1,
    1
  ],
  [
    2,
    2
  ],
  [
    3,
    3
  ],
  [
    4,
    4
  ],
  [
    5,
    5
  ]
];

var q2 = [
  [
    1,
    2,
    2
  ],
  [
    2,
    2,
    2
  ],
  [
    4,
    3,
    2
  ],
  [
    4,
    3,
    3
  ]
];

var r2 = queriesOnNumberOfPointsInsideCircle(p2, q2);

console.log("r2: ", r2);

export {
  queriesOnNumberOfPointsInsideCircle ,
  p1 ,
  q1 ,
  r1 ,
  p2 ,
  q2 ,
  r2 ,
}
/* r1 Not a pure module */
