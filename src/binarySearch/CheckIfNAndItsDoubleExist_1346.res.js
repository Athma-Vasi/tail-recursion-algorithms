// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";

function checkIfNAndItsDoubleExist(arr) {
  var sorted = arr.map(function (n) {
        return n;
      });
  sorted.sort(function (a, b) {
        return a - b | 0;
      });
  var binarySearch = function (_leftIndex, _rightIndex, target) {
    while(true) {
      var rightIndex = _rightIndex;
      var leftIndex = _leftIndex;
      var middleIndex = leftIndex + ((rightIndex - leftIndex | 0) / 2 | 0) | 0;
      var num = sorted.at(middleIndex);
      var middleN = num !== undefined ? num : Int32.min_int;
      if (leftIndex > rightIndex || middleN === Int32.min_int) {
        return false;
      }
      if (middleN === target) {
        return true;
      }
      if (middleN > target) {
        _rightIndex = middleIndex - 1 | 0;
        continue ;
      }
      _leftIndex = middleIndex + 1 | 0;
      continue ;
    };
  };
  var length = arr.length;
  var isExistsSet = new Set();
  var _index = 0;
  while(true) {
    var index = _index;
    var num = sorted.at(index);
    var currentN = num !== undefined ? num : Int32.min_int;
    var doubledN = currentN + currentN | 0;
    isExistsSet.add(binarySearch(index + 1 | 0, length - 1 | 0, doubledN));
    if (index === length) {
      return isExistsSet.has(true);
    }
    _index = index + 1 | 0;
    continue ;
  };
}

var a1 = [
  10,
  2,
  5,
  3
];

var r1 = checkIfNAndItsDoubleExist(a1);

console.log("r1: ", r1);

var a2 = [
  7,
  1,
  14,
  11
];

var r2 = checkIfNAndItsDoubleExist(a2);

console.log("r2: ", r2);

var a3 = [
  3,
  1,
  7,
  11
];

var r3 = checkIfNAndItsDoubleExist(a3);

console.log("r3: ", r3);

export {
  checkIfNAndItsDoubleExist ,
  a1 ,
  r1 ,
  a2 ,
  r2 ,
  a3 ,
  r3 ,
}
/* r1 Not a pure module */
