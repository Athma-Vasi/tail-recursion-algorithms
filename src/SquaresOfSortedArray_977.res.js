// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";
import * as Core__Array from "@rescript/core/src/Core__Array.res.js";

function squaresSortedArray(nums) {
  var length = nums.length;
  var isEvenLength = length % 2.0 === 0.0;
  var leftIndex = (
    isEvenLength ? length / 2.0 - 1.0 : Math.trunc(length / 2.0) - 1.0
  ) | 0;
  var rightIndex = isEvenLength ? leftIndex + 1 | 0 : leftIndex + 2 | 0;
  var middleNum;
  if (isEvenLength) {
    middleNum = Int32.min_int;
  } else {
    var num = nums[leftIndex + 1 | 0];
    middleNum = num !== undefined ? num : Int32.min_int;
  }
  var accumulator = Core__Array.make(length, Int32.min_int);
  if (isEvenLength) {
    
  } else {
    accumulator[0] = middleNum;
  }
  var accIndex = isEvenLength ? 0 : 1;
  console.log("--before loop");
  console.log("length", length);
  console.log("isEvenLength", isEvenLength);
  console.log("leftIndex", leftIndex);
  console.log("rightIndex", rightIndex);
  console.log("middleNum", middleNum);
  console.log("accumulator", accumulator);
  var _accIndex = accIndex;
  var _leftIndex = leftIndex;
  var _rightIndex = rightIndex;
  while(true) {
    var rightIndex$1 = _rightIndex;
    var leftIndex$1 = _leftIndex;
    var accIndex$1 = _accIndex;
    if (leftIndex$1 < 0 || rightIndex$1 === length) {
      return accumulator;
    }
    var num$1 = nums[leftIndex$1];
    var leftNum = num$1 !== undefined ? num$1 : Int32.min_int;
    var leftNumSquared = Math.imul(leftNum, leftNum);
    var num$2 = nums[rightIndex$1];
    var rightNum = num$2 !== undefined ? num$2 : Int32.min_int;
    var rightNumSquared = Math.imul(rightNum, rightNum);
    console.log("--loop");
    console.log("leftIndex", leftIndex$1);
    console.log("leftNum", leftNum);
    console.log("leftNumSquared", leftNumSquared);
    console.log("rightIndex", rightIndex$1);
    console.log("rightNum", rightNum);
    console.log("rightNumSquared", rightNumSquared);
    console.log("accIndex", accIndex$1);
    if (leftNumSquared < rightNumSquared) {
      accumulator[accIndex$1] = leftNumSquared;
      console.log("accumulator", accumulator);
      _leftIndex = leftIndex$1 - 1 | 0;
      _accIndex = accIndex$1 + 1 | 0;
      continue ;
    }
    accumulator[accIndex$1] = rightNumSquared;
    console.log("accumulator", accumulator);
    if (leftNumSquared > rightNumSquared) {
      _rightIndex = rightIndex$1 + 1 | 0;
      _accIndex = accIndex$1 + 1 | 0;
      continue ;
    }
    _rightIndex = rightIndex$1 + 1 | 0;
    _accIndex = accIndex$1 + 1 | 0;
    continue ;
  };
}

var n1 = [
  -4,
  -1,
  0,
  3,
  10
];

var r1 = squaresSortedArray(n1);

console.log("[-4,-1,0,3,10]", r1);

export {
  squaresSortedArray ,
  n1 ,
  r1 ,
}
/* r1 Not a pure module */
