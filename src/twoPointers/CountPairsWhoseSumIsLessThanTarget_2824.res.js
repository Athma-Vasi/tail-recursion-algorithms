// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml from "rescript/lib/es6/caml.js";

function countPairsWhoseSumIsLessThanTarget(nums, target) {
  var sorted = nums.toSorted(Caml.int_compare);
  var _count = 0;
  var _leftIndex = 0;
  var _rightIndex = sorted.length - 1 | 0;
  while(true) {
    var rightIndex = _rightIndex;
    var leftIndex = _leftIndex;
    var count = _count;
    if (leftIndex >= rightIndex) {
      return count;
    }
    var n = sorted.at(leftIndex);
    var leftNum = n !== undefined ? n : -51;
    var n$1 = sorted.at(rightIndex);
    var rightNum = n$1 !== undefined ? n$1 : 51;
    var sum = leftNum + rightNum | 0;
    if (sum < target) {
      _leftIndex = leftIndex + 1 | 0;
      _count = (count + rightIndex | 0) - leftIndex | 0;
      continue ;
    }
    _rightIndex = rightIndex - 1 | 0;
    continue ;
  };
}

var n1 = [
  -1,
  1,
  2,
  3,
  1
];

var r1 = countPairsWhoseSumIsLessThanTarget(n1, 2);

console.log("r1: ", r1);

var n2 = [
  -6,
  2,
  5,
  -2,
  -7,
  -1,
  3
];

var r2 = countPairsWhoseSumIsLessThanTarget(n2, -2);

console.log("r2: ", r2);

var t1 = 2;

var t2 = -2;

export {
  countPairsWhoseSumIsLessThanTarget ,
  n1 ,
  t1 ,
  r1 ,
  n2 ,
  t2 ,
  r2 ,
}
/* r1 Not a pure module */
