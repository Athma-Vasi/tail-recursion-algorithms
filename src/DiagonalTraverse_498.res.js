// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";

function diagonalTraverse(matrix) {
  var rows = matrix.length;
  var row = matrix[0];
  var firstRow = row !== undefined ? row : [];
  var columns = firstRow.length;
  var _accumulator = [];
  var _y = 0;
  var _x = 0;
  while(true) {
    var x = _x;
    var y = _y;
    var accumulator = _accumulator;
    var isIndexSumEven = (y + x) % 2.0 === 0.0;
    var row$1 = matrix[y];
    var currentRow = row$1 !== undefined ? row$1 : [];
    var num = currentRow[x];
    var currentNum = num !== undefined ? num : Int32.min_int;
    var clone = accumulator.concat([currentNum]);
    if (y === (rows - 1 | 0) && x === (columns - 1 | 0)) {
      return clone;
    }
    if (isIndexSumEven) {
      if (x === (columns - 1 | 0)) {
        _y = y + 1 | 0;
        _accumulator = clone;
        continue ;
      }
      if (y === 0) {
        _x = x + 1 | 0;
        _accumulator = clone;
        continue ;
      }
      _x = x + 1 | 0;
      _y = y - 1 | 0;
      _accumulator = clone;
      continue ;
    }
    if (x === 0) {
      if (y === (rows - 1 | 0)) {
        _x = x + 1 | 0;
        _accumulator = clone;
        continue ;
      }
      _y = y + 1 | 0;
      _accumulator = clone;
      continue ;
    }
    if (y === (rows - 1 | 0)) {
      _x = x + 1 | 0;
      _accumulator = clone;
      continue ;
    }
    _x = x - 1 | 0;
    _y = y + 1 | 0;
    _accumulator = clone;
    continue ;
  };
}

var matrix1 = [
  [
    1,
    2,
    3
  ],
  [
    4,
    5,
    6
  ],
  [
    7,
    8,
    9
  ]
];

var result1 = diagonalTraverse(matrix1);

console.log("matrix1", result1);

var matrix2 = [
  [
    1,
    2
  ],
  [
    3,
    4
  ]
];

var result2 = diagonalTraverse(matrix2);

console.log("matrix2", result2);

export {
  diagonalTraverse ,
  matrix1 ,
  result1 ,
  matrix2 ,
  result2 ,
}
/* result1 Not a pure module */
