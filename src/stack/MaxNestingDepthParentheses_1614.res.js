// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";

function maxNestingDepthParentheses(str) {
  var strLength = str.length;
  var _max = Int32.min_int;
  var _parensStack = "";
  var _index = 0;
  while(true) {
    var index = _index;
    var parensStack = _parensStack;
    var max = _max;
    var parensStackLength = parensStack.length;
    if (index === strLength) {
      return max + 1 | 0;
    }
    var match = str.charAt(index);
    switch (match) {
      case "(" :
          _index = index + 1 | 0;
          _parensStack = parensStack.concat("(");
          _max = max > parensStackLength ? max : parensStackLength;
          continue ;
      case ")" :
          _index = index + 1 | 0;
          _parensStack = parensStack.slice(0, parensStackLength - 1 | 0);
          continue ;
      default:
        _index = index + 1 | 0;
        continue ;
    }
  };
}

var s1 = "(1+(2*3)+((8)/4))+1";

var r1 = maxNestingDepthParentheses(s1);

console.log("r1: ", r1);

var s2 = "(1)+((2))+(((3)))";

var r2 = maxNestingDepthParentheses(s2);

console.log("r2: ", r2);

var s3 = "()(())((()()))";

var r3 = maxNestingDepthParentheses(s3);

console.log("r3: ", r3);

export {
  maxNestingDepthParentheses ,
  s1 ,
  r1 ,
  s2 ,
  r2 ,
  s3 ,
  r3 ,
}
/* r1 Not a pure module */
