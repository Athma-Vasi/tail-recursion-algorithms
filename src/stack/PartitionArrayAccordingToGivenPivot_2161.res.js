// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";

function partitionArrayAccordingToGivenPivot(nums, pivot) {
  var _lesserStack = [];
  var _equalStack = [];
  var _greaterStack = [];
  var _index = 0;
  while(true) {
    var index = _index;
    var greaterStack = _greaterStack;
    var equalStack = _equalStack;
    var lesserStack = _lesserStack;
    if (index === nums.length) {
      return lesserStack.concat(equalStack).concat(greaterStack);
    }
    var n = nums.at(index);
    var num = n !== undefined ? n : Int32.min_int;
    if (num < pivot) {
      _index = index + 1 | 0;
      _lesserStack = lesserStack.concat([num]);
      continue ;
    }
    if (num === pivot) {
      _index = index + 1 | 0;
      _equalStack = equalStack.concat([num]);
      continue ;
    }
    _index = index + 1 | 0;
    _greaterStack = greaterStack.concat([num]);
    continue ;
  };
}

var n1 = [
  9,
  12,
  5,
  10,
  14,
  3,
  10
];

var r1 = partitionArrayAccordingToGivenPivot(n1, 10);

console.log("r1: ", r1);

var n2 = [
  -3,
  4,
  3,
  2
];

var r2 = partitionArrayAccordingToGivenPivot(n2, 2);

console.log("r2: ", r2);

var p1 = 10;

var p2 = 2;

export {
  partitionArrayAccordingToGivenPivot ,
  n1 ,
  p1 ,
  r1 ,
  n2 ,
  p2 ,
  r2 ,
}
/* r1 Not a pure module */
