// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";

function minOperationsToMakeArrayIncreasing(nums) {
  var _stack = [];
  var _opsCount = 0;
  var _index = 0;
  while(true) {
    var index = _index;
    var opsCount = _opsCount;
    var stack = _stack;
    if (index === nums.length) {
      return opsCount;
    }
    var num = nums.at(index);
    var currentNum = num !== undefined ? num : Int32.min_int;
    var num$1 = stack.at(-1);
    var previousNum = num$1 !== undefined ? num$1 : Int32.min_int + 1 | 0;
    if (previousNum < currentNum) {
      _index = index + 1 | 0;
      _stack = stack.concat([currentNum]);
      continue ;
    }
    var ops = (previousNum - currentNum | 0) + 1 | 0;
    _index = index + 1 | 0;
    _opsCount = opsCount + ops | 0;
    _stack = stack.concat([previousNum + 1 | 0]);
    continue ;
  };
}

var n1 = [
  1,
  1,
  1
];

var r1 = minOperationsToMakeArrayIncreasing(n1);

console.log("[1,1,1]", r1);

var n2 = [
  1,
  5,
  2,
  4,
  1
];

var r2 = minOperationsToMakeArrayIncreasing(n2);

console.log("[1,5,2,4,1]", r2);

var n3 = [8];

var r3 = minOperationsToMakeArrayIncreasing(n3);

console.log("[8]", r3);

export {
  minOperationsToMakeArrayIncreasing ,
  n1 ,
  r1 ,
  n2 ,
  r2 ,
  n3 ,
  r3 ,
}
/* r1 Not a pure module */
