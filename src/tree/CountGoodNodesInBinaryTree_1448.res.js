// Generated by ReScript, PLEASE EDIT WITH CARE

import * as TreeNode from "./TreeNode.res.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function countGoodNodesInBinaryTree(root) {
  if (root !== undefined) {
    var _count = 0;
    var _stack = {
      hd: [
        root,
        root.val - 1 | 0
      ],
      tl: /* [] */0
    };
    while(true) {
      var stack = _stack;
      var count = _count;
      if (!stack) {
        return count;
      }
      var match = stack.hd;
      var node = match[0];
      var right = node.right;
      var left = node.left;
      var val = node.val;
      var rest = stack.tl;
      var maxSoFar = match[1];
      var newMax = val >= maxSoFar ? val : maxSoFar;
      var newCount = val >= maxSoFar ? count + 1 | 0 : count;
      if (left !== undefined) {
        if (right !== undefined) {
          _stack = {
            hd: [
              left,
              newMax
            ],
            tl: {
              hd: [
                right,
                newMax
              ],
              tl: rest
            }
          };
          _count = newCount;
          continue ;
        }
        _stack = {
          hd: [
            left,
            newMax
          ],
          tl: rest
        };
        _count = newCount;
        continue ;
      }
      if (right !== undefined) {
        _stack = {
          hd: [
            right,
            newMax
          ],
          tl: rest
        };
        _count = newCount;
        continue ;
      }
      _stack = rest;
      _count = newCount;
      continue ;
    };
  } else {
    return 0;
  }
}

var node3_left = TreeNode.make(3, undefined, undefined);

var node1_right = TreeNode.make(1, undefined, undefined);

var node5 = TreeNode.make(5, undefined, undefined);

var node1 = TreeNode.make(1, Caml_option.some(node3_left), undefined);

var node4 = TreeNode.make(4, Caml_option.some(node1_right), Caml_option.some(node5));

var root = TreeNode.make(3, Caml_option.some(node1), Caml_option.some(node4));

var r1 = countGoodNodesInBinaryTree(root);

console.log("r1: ", r1);

export {
  countGoodNodesInBinaryTree ,
  node3_left ,
  node1_right ,
  node5 ,
  node1 ,
  node4 ,
  root ,
  r1 ,
}
/* node3_left Not a pure module */
