// Generated by ReScript, PLEASE EDIT WITH CARE

import * as TreeNode from "./TreeNode.res.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function twoSumIV_BST(root, k) {
  if (root !== undefined) {
    var _exists = false;
    var values = new Set();
    var _stack = {
      hd: root,
      tl: /* [] */0
    };
    while(true) {
      var stack = _stack;
      var exists = _exists;
      if (exists) {
        return true;
      }
      if (!stack) {
        return exists;
      }
      var popped = stack.hd;
      var val = popped.val;
      var rest = stack.tl;
      var left = popped.left;
      var right = popped.right;
      var exists_ = values.has(k - val | 0);
      values.add(val);
      if (left !== undefined) {
        if (right !== undefined) {
          _stack = {
            hd: left,
            tl: {
              hd: right,
              tl: rest
            }
          };
          _exists = exists_;
          continue ;
        }
        _stack = {
          hd: left,
          tl: rest
        };
        _exists = exists_;
        continue ;
      }
      if (right !== undefined) {
        _stack = {
          hd: right,
          tl: rest
        };
        _exists = exists_;
        continue ;
      }
      _stack = rest;
      _exists = exists_;
      continue ;
    };
  } else {
    return false;
  }
}

var n5 = TreeNode.make(5, Caml_option.some(TreeNode.make(3, undefined, undefined)), Caml_option.some(TreeNode.make(7, undefined, undefined)));

var n15 = TreeNode.make(15, undefined, Caml_option.some(TreeNode.make(18, undefined, undefined)));

var root1 = TreeNode.make(10, Caml_option.some(n5), Caml_option.some(n15));

var r1 = twoSumIV_BST(root1, 10);

console.log("r1: ", r1);

var r2 = twoSumIV_BST(root1, 20);

console.log("r2: ", r2);

var r3 = twoSumIV_BST(root1, 30);

console.log("r3: ", r3);

export {
  twoSumIV_BST ,
  n5 ,
  n15 ,
  root1 ,
  r1 ,
  r2 ,
  r3 ,
}
/* n5 Not a pure module */
