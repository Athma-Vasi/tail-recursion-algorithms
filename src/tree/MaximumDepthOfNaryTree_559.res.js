// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__List from "@rescript/core/src/Core__List.res.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as NaryTreeNode from "./NaryTreeNode.res.js";

function maximumDepthOfNaryTree(root) {
  if (root !== undefined) {
    var _maxDepth = 0;
    var _stack = {
      hd: [
        root,
        1
      ],
      tl: /* [] */0
    };
    while(true) {
      var stack = _stack;
      var maxDepth = _maxDepth;
      if (!stack) {
        return maxDepth;
      }
      var match = stack.hd;
      var branches = match[0].branches;
      var rest = stack.tl;
      var depth = match[1];
      var newMaxDepth = maxDepth > depth ? maxDepth : depth;
      if (branches !== undefined) {
        var newStack = Core__List.reduce(branches, rest, (function(depth){
            return function (acc, branch) {
              return {
                      hd: [
                        branch,
                        depth + 1 | 0
                      ],
                      tl: acc
                    };
            }
            }(depth)));
        _stack = newStack;
        _maxDepth = newMaxDepth;
        continue ;
      }
      _stack = rest;
      _maxDepth = newMaxDepth;
      continue ;
    };
  } else {
    return 0;
  }
}

var n2 = NaryTreeNode.make(2, undefined);

var n3 = NaryTreeNode.make(3, undefined);

var n5 = NaryTreeNode.make(5, undefined);

var n4 = NaryTreeNode.make(4, Caml_option.some({
          hd: n5,
          tl: /* [] */0
        }));

var root1 = NaryTreeNode.make(1, Caml_option.some({
          hd: n2,
          tl: {
            hd: n3,
            tl: {
              hd: n4,
              tl: /* [] */0
            }
          }
        }));

var r1 = maximumDepthOfNaryTree(root1);

console.log("r1: ", r1);

export {
  maximumDepthOfNaryTree ,
  n2 ,
  n3 ,
  n5 ,
  n4 ,
  root1 ,
  r1 ,
}
/* n2 Not a pure module */
