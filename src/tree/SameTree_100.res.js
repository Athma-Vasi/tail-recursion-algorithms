// Generated by ReScript, PLEASE EDIT WITH CARE

import * as TreeNode from "./TreeNode.res.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function sameTree(root1, root2) {
  var _areSame = true;
  var _curr1 = root1;
  var _curr2 = root2;
  var _stack1 = /* [] */0;
  var _stack2 = /* [] */0;
  while(true) {
    var stack2 = _stack2;
    var stack1 = _stack1;
    var curr2 = _curr2;
    var curr1 = _curr1;
    var areSame = _areSame;
    if (!areSame) {
      return false;
    }
    if (curr1 !== undefined) {
      if (curr2 === undefined) {
        return false;
      }
      _stack2 = {
        hd: curr2,
        tl: stack2
      };
      _stack1 = {
        hd: curr1,
        tl: stack1
      };
      _curr2 = curr2.left;
      _curr1 = curr1.left;
      continue ;
    }
    if (curr2 !== undefined) {
      return false;
    }
    if (!stack1) {
      if (stack2) {
        return false;
      } else {
        return areSame;
      }
    }
    if (!stack2) {
      return false;
    }
    var _popped1 = stack1.hd;
    var popped2 = stack2.hd;
    _stack2 = stack2.tl;
    _stack1 = stack1.tl;
    _curr2 = popped2.right;
    _curr1 = _popped1.right;
    _areSame = _popped1.val === popped2.val;
    continue ;
  };
}

var n5 = TreeNode.make(5, Caml_option.some(TreeNode.make(3, undefined, undefined)), Caml_option.some(TreeNode.make(7, undefined, undefined)));

var n15 = TreeNode.make(15, undefined, Caml_option.some(TreeNode.make(18, undefined, undefined)));

var root1 = TreeNode.make(10, Caml_option.some(n5), Caml_option.some(n15));

var n5$1 = TreeNode.make(5, Caml_option.some(TreeNode.make(3, undefined, undefined)), Caml_option.some(TreeNode.make(7, undefined, undefined)));

var n15$1 = TreeNode.make(15, undefined, Caml_option.some(TreeNode.make(18, undefined, undefined)));

var root2 = TreeNode.make(10, Caml_option.some(n5$1), Caml_option.some(n15$1));

var r1 = sameTree(root1, root2);

console.log("r1: ", r1);

var tree1 = TreeNode.make(1, Caml_option.some(TreeNode.make(2, undefined, undefined)), Caml_option.some(TreeNode.make(3, Caml_option.some(TreeNode.make(4, undefined, undefined)), undefined)));

var tree2 = TreeNode.make(1, Caml_option.some(TreeNode.make(2, undefined, undefined)), Caml_option.some(TreeNode.make(4, undefined, undefined)));

var r2 = sameTree(tree1, tree2);

console.log("r2: ", r2);

export {
  sameTree ,
  root1 ,
  n5$1 as n5,
  n15$1 as n15,
  root2 ,
  r1 ,
  tree1 ,
  tree2 ,
  r2 ,
}
/* n5 Not a pure module */
