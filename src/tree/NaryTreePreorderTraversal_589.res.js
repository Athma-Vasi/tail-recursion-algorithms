// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__List from "@rescript/core/src/Core__List.res.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as NaryTreeNode from "./NaryTreeNode.res.js";

function naryTreePreorderTraversal(root) {
  if (root !== undefined) {
    var _result = /* [] */0;
    var _stack = {
      hd: root,
      tl: /* [] */0
    };
    while(true) {
      var stack = _stack;
      var result = _result;
      if (!stack) {
        return Core__List.toArray(Core__List.reverse(result));
      }
      var popped = stack.hd;
      var branches = popped.branches;
      var rest = stack.tl;
      var newResult_0 = popped.val;
      var newResult = {
        hd: newResult_0,
        tl: result
      };
      if (branches !== undefined) {
        _stack = Core__List.reduce(branches, rest, (function (acc, branch) {
                return {
                        hd: branch,
                        tl: acc
                      };
              }));
        _result = newResult;
        continue ;
      }
      _stack = rest;
      _result = newResult;
      continue ;
    };
  } else {
    return [];
  }
}

var n2 = NaryTreeNode.make(2, undefined);

var n3 = NaryTreeNode.make(3, undefined);

var n5 = NaryTreeNode.make(5, undefined);

var n4 = NaryTreeNode.make(4, Caml_option.some({
          hd: n5,
          tl: /* [] */0
        }));

var root1 = NaryTreeNode.make(1, Caml_option.some({
          hd: n2,
          tl: {
            hd: n3,
            tl: {
              hd: n4,
              tl: /* [] */0
            }
          }
        }));

var r1 = naryTreePreorderTraversal(root1);

console.log("r1: ", r1);

export {
  naryTreePreorderTraversal ,
  n2 ,
  n3 ,
  n5 ,
  n4 ,
  root1 ,
  r1 ,
}
/* n2 Not a pure module */
