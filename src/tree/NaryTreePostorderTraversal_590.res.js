// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__List from "@rescript/core/src/Core__List.res.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as NaryTreeNode from "./NaryTreeNode.res.js";

function naryTreePostorderTraversal(root) {
  if (root !== undefined) {
    var _resultStack = /* [] */0;
    var _workingStack = {
      hd: root,
      tl: /* [] */0
    };
    while(true) {
      var workingStack = _workingStack;
      var resultStack = _resultStack;
      if (!workingStack) {
        return Core__List.toArray(resultStack);
      }
      var top = workingStack.hd;
      var branches = top.branches;
      var rest = workingStack.tl;
      var newResultStack_0 = top.val;
      var newResultStack = {
        hd: newResultStack_0,
        tl: resultStack
      };
      if (branches !== undefined) {
        _workingStack = Core__List.reduce(branches, rest, (function (acc, branch) {
                return {
                        hd: branch,
                        tl: acc
                      };
              }));
        _resultStack = newResultStack;
        continue ;
      }
      _workingStack = rest;
      _resultStack = newResultStack;
      continue ;
    };
  } else {
    return [];
  }
}

var n2 = NaryTreeNode.make(2, undefined);

var n3 = NaryTreeNode.make(3, undefined);

var n5 = NaryTreeNode.make(5, undefined);

var n4 = NaryTreeNode.make(4, Caml_option.some({
          hd: n5,
          tl: /* [] */0
        }));

var root1 = NaryTreeNode.make(1, Caml_option.some({
          hd: n2,
          tl: {
            hd: n3,
            tl: {
              hd: n4,
              tl: /* [] */0
            }
          }
        }));

var r1 = naryTreePostorderTraversal(root1);

console.log("r1: ", r1);

export {
  naryTreePostorderTraversal ,
  n2 ,
  n3 ,
  n5 ,
  n4 ,
  root1 ,
  r1 ,
}
/* n2 Not a pure module */
