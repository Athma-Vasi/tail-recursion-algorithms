// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__List from "@rescript/core/src/Core__List.res.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as NaryTreeNode from "./NaryTreeNode.res.js";

function naryTreePostorderTraversal(root) {
  if (root !== undefined) {
    var _resultStack = /* [] */0;
    var _workingStack = {
      hd: root,
      tl: /* [] */0
    };
    while(true) {
      var workingStack = _workingStack;
      var resultStack = _resultStack;
      if (!workingStack) {
        return Core__List.toArray(resultStack);
      }
      var top = workingStack.hd;
      var branches = top.branches;
      var rest = workingStack.tl;
      var newResultStack_0 = top.val;
      var newResultStack = {
        hd: newResultStack_0,
        tl: resultStack
      };
      if (branches !== undefined) {
        _workingStack = Core__List.reduce(branches, rest, (function (acc, branch) {
                return {
                        hd: branch,
                        tl: acc
                      };
              }));
        _resultStack = newResultStack;
        continue ;
      }
      _workingStack = rest;
      _resultStack = newResultStack;
      continue ;
    };
  } else {
    return [];
  }
}

var n2 = NaryTreeNode.make(2, undefined);

var n3 = NaryTreeNode.make(3, undefined);

var n5 = NaryTreeNode.make(5, undefined);

var n4 = NaryTreeNode.make(4, Caml_option.some({
          hd: n5,
          tl: /* [] */0
        }));

var root1 = NaryTreeNode.make(1, Caml_option.some({
          hd: n2,
          tl: {
            hd: n3,
            tl: {
              hd: n4,
              tl: /* [] */0
            }
          }
        }));

var r1 = naryTreePostorderTraversal(root1);

console.log("r1: ", r1);

var n5$1 = NaryTreeNode.make(5, undefined);

var n6 = NaryTreeNode.make(6, undefined);

var n7 = NaryTreeNode.make(7, undefined);

var n8 = NaryTreeNode.make(8, undefined);

var n9 = NaryTreeNode.make(9, undefined);

var n10 = NaryTreeNode.make(10, undefined);

var n2$1 = NaryTreeNode.make(2, Caml_option.some({
          hd: n5$1,
          tl: {
            hd: n6,
            tl: {
              hd: n7,
              tl: /* [] */0
            }
          }
        }));

var n3$1 = NaryTreeNode.make(3, Caml_option.some({
          hd: n8,
          tl: /* [] */0
        }));

var n4$1 = NaryTreeNode.make(4, Caml_option.some({
          hd: n9,
          tl: {
            hd: n10,
            tl: /* [] */0
          }
        }));

var root2 = NaryTreeNode.make(1, Caml_option.some({
          hd: n2$1,
          tl: {
            hd: n3$1,
            tl: {
              hd: n4$1,
              tl: /* [] */0
            }
          }
        }));

var r2 = naryTreePostorderTraversal(root2);

console.log("r2: ", r2);

export {
  naryTreePostorderTraversal ,
  root1 ,
  r1 ,
  n5$1 as n5,
  n6 ,
  n7 ,
  n8 ,
  n9 ,
  n10 ,
  n2$1 as n2,
  n3$1 as n3,
  n4$1 as n4,
  root2 ,
  r2 ,
}
/* n2 Not a pure module */
