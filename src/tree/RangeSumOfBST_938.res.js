// Generated by ReScript, PLEASE EDIT WITH CARE

import * as TreeNode from "./TreeNode.res.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function rangeSumOfBST(root, low, high) {
  var _result = 0;
  var _curr = root;
  var _stack = /* [] */0;
  while(true) {
    var stack = _stack;
    var curr = _curr;
    var result = _result;
    if (curr !== undefined) {
      _stack = {
        hd: curr,
        tl: stack
      };
      _curr = curr.left;
      continue ;
    }
    if (!stack) {
      return result;
    }
    var top = stack.hd;
    var val = top.val;
    var right = top.right;
    _stack = stack.tl;
    _curr = right;
    _result = val >= low && val <= high ? result + val | 0 : result;
    continue ;
  };
}

var n5 = TreeNode.make(5, Caml_option.some(TreeNode.make(3, undefined, undefined)), Caml_option.some(TreeNode.make(7, undefined, undefined)));

var n15 = TreeNode.make(15, undefined, Caml_option.some(TreeNode.make(18, undefined, undefined)));

var root1 = TreeNode.make(10, Caml_option.some(n5), Caml_option.some(n15));

var r1 = rangeSumOfBST(root1, 7, 15);

console.log("r1: ", r1);

var n5$1 = TreeNode.make(5, undefined, undefined);

var n17 = TreeNode.make(17, undefined, undefined);

var n15$1 = TreeNode.make(15, undefined, Caml_option.some(n17));

var n10 = TreeNode.make(10, Caml_option.some(n5$1), Caml_option.some(n15$1));

var n40 = TreeNode.make(40, undefined, undefined);

var n30 = TreeNode.make(30, undefined, Caml_option.some(n40));

var root2 = TreeNode.make(20, Caml_option.some(n10), Caml_option.some(n30));

var r2 = rangeSumOfBST(root2, 10, 35);

console.log("r2: ", r2);

export {
  rangeSumOfBST ,
  root1 ,
  r1 ,
  n5$1 as n5,
  n17 ,
  n15$1 as n15,
  n10 ,
  n40 ,
  n30 ,
  root2 ,
  r2 ,
}
/* n5 Not a pure module */
