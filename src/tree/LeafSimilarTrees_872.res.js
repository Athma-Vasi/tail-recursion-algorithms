// Generated by ReScript, PLEASE EDIT WITH CARE

import * as TreeNode from "./TreeNode.res.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function leafSimilarTrees(root1, root2) {
  var _leafSimilar = true;
  var _curr1 = root1;
  var _curr2 = root2;
  var _stack1 = /* [] */0;
  var _stack2 = /* [] */0;
  while(true) {
    var stack2 = _stack2;
    var stack1 = _stack1;
    var curr2 = _curr2;
    var curr1 = _curr1;
    var leafSimilar = _leafSimilar;
    if (!leafSimilar) {
      return false;
    }
    if (curr1 !== undefined) {
      if (curr2 === undefined) {
        return false;
      }
      _stack2 = {
        hd: curr2,
        tl: stack2
      };
      _stack1 = {
        hd: curr1,
        tl: stack1
      };
      _curr2 = curr2.left;
      _curr1 = curr1.left;
      continue ;
    }
    if (curr2 !== undefined) {
      return false;
    }
    if (!stack1) {
      if (stack2) {
        return false;
      } else {
        return leafSimilar;
      }
    }
    if (!stack2) {
      return false;
    }
    var _rest1 = stack1.tl;
    var _node1 = stack1.hd;
    var rest2 = stack2.tl;
    var popped2 = stack2.hd;
    var match = _node1.left;
    var match$1 = _node1.right;
    var match$2 = popped2.left;
    var match$3 = popped2.right;
    if (match === undefined && match$1 === undefined && match$2 === undefined && match$3 === undefined) {
      _stack2 = rest2;
      _stack1 = _rest1;
      _curr2 = undefined;
      _curr1 = undefined;
      _leafSimilar = _node1.val === popped2.val;
      continue ;
    }
    _stack2 = rest2;
    _stack1 = _rest1;
    _curr2 = popped2.right;
    _curr1 = _node1.right;
    continue ;
  };
}

var n5 = TreeNode.make(5, Caml_option.some(TreeNode.make(3, undefined, undefined)), Caml_option.some(TreeNode.make(7, undefined, undefined)));

var n15 = TreeNode.make(15, undefined, Caml_option.some(TreeNode.make(18, undefined, undefined)));

var root1 = TreeNode.make(10, Caml_option.some(n5), Caml_option.some(n15));

var r1 = leafSimilarTrees(root1, root1);

console.log("r1: ", r1);

var tree = TreeNode.make(1, Caml_option.some(TreeNode.make(1, Caml_option.some(TreeNode.make(1, undefined, undefined)), undefined)), Caml_option.some(TreeNode.make(1, undefined, Caml_option.some(TreeNode.make(1, undefined, undefined)))));

var r2 = leafSimilarTrees(root1, tree);

console.log("r2: ", r2);

export {
  leafSimilarTrees ,
  n5 ,
  n15 ,
  root1 ,
  r1 ,
  tree ,
  r2 ,
}
/* n5 Not a pure module */
