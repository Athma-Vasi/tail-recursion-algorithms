// Generated by ReScript, PLEASE EDIT WITH CARE

import * as TreeNode from "./TreeNode.res.js";
import * as Core__List from "@rescript/core/src/Core__List.res.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.res.js";

function kthSmallestElementInABST(root, k) {
  var inorderTraverse = function (_sortedAscStack, _curr, _workingStack) {
    while(true) {
      var workingStack = _workingStack;
      var curr = _curr;
      var sortedAscStack = _sortedAscStack;
      if (curr !== undefined) {
        _workingStack = {
          hd: curr,
          tl: workingStack
        };
        _curr = curr.left;
        continue ;
      }
      if (!workingStack) {
        return sortedAscStack;
      }
      var top = workingStack.hd;
      _workingStack = workingStack.tl;
      _curr = top.right;
      _sortedAscStack = {
        hd: top.val,
        tl: sortedAscStack
      };
      continue ;
    };
  };
  return Core__Option.mapOr(Core__List.get(Core__List.reverse(inorderTraverse(/* [] */0, root, /* [] */0)), k - 1 | 0), -1, (function (num) {
                return num;
              }));
}

var n5 = TreeNode.make(5, Caml_option.some(TreeNode.make(3, undefined, undefined)), Caml_option.some(TreeNode.make(7, undefined, undefined)));

var n15 = TreeNode.make(15, undefined, Caml_option.some(TreeNode.make(18, undefined, undefined)));

var root1 = TreeNode.make(10, Caml_option.some(n5), Caml_option.some(n15));

var r1 = kthSmallestElementInABST(root1, 1);

console.log("r1: ", r1);

export {
  kthSmallestElementInABST ,
  n5 ,
  n15 ,
  root1 ,
  r1 ,
}
/* n5 Not a pure module */
