// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Int from "@rescript/core/src/Core__Int.res.js";
import * as Core__Array from "@rescript/core/src/Core__Array.res.js";

function countSymmetricIntegers(low, high) {
  var splitInteger = function (num) {
    var numStr = num.toString();
    var numLength = numStr.length;
    var n = (numLength / 2 | 0) - 1 | 0;
    var _left = String();
    var _right = String();
    var _index = 0;
    while(true) {
      var index = _index;
      var right = _right;
      var left = _left;
      if (index === numLength) {
        return [
                left,
                right
              ];
      }
      var numChar = numStr.charAt(index);
      if (index <= n) {
        _index = index + 1 | 0;
        _left = left.concat(numChar);
        continue ;
      }
      _index = index + 1 | 0;
      _right = right.concat(numChar);
      continue ;
    };
  };
  var findSumOfInteger = function (num) {
    return Core__Array.reduce(num.toString().split(""), 0, (function (acc, nChar) {
                  var n = Core__Int.fromString(nChar, undefined);
                  var num = n !== undefined ? n : 0;
                  return acc + num | 0;
                }));
  };
  var _amount = 0;
  var _num = low;
  while(true) {
    var num = _num;
    var amount = _amount;
    if (num === (high + 1 | 0)) {
      return amount;
    }
    var isNumDigitsAmountEven = num.toString().length % 2.0 === 0.0;
    if (isNumDigitsAmountEven) {
      var match = splitInteger(num);
      var n = Core__Int.fromString(match[0], undefined);
      var leftNum = n !== undefined ? n : 0;
      var n$1 = Core__Int.fromString(match[1], undefined);
      var rightNum = n$1 !== undefined ? n$1 : 0;
      var leftSum = findSumOfInteger(leftNum);
      var rightSum = findSumOfInteger(rightNum);
      _num = num + 1 | 0;
      _amount = leftSum === rightSum ? amount + 1 | 0 : amount;
      continue ;
    }
    _num = num + 1 | 0;
    continue ;
  };
}

var r1 = countSymmetricIntegers(1, 100);

console.log("r1: ", r1);

var r2 = countSymmetricIntegers(1200, 1230);

console.log("r2: ", r2);

var l1 = 1;

var h1 = 100;

var l2 = 1200;

var h2 = 1230;

export {
  countSymmetricIntegers ,
  l1 ,
  h1 ,
  r1 ,
  l2 ,
  h2 ,
  r2 ,
}
/* r1 Not a pure module */
