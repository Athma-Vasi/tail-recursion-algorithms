// Generated by ReScript, PLEASE EDIT WITH CARE


function shortestSubarrayToBeRemovedToMakeArraySorted(arr) {
  var updateMonoIncrStack = function (_subarray, _monoIncrStack, numToPush) {
    while(true) {
      var monoIncrStack = _monoIncrStack;
      var subarray = _subarray;
      var n = monoIncrStack.at(-1);
      var prevNum = n !== undefined ? n : -1;
      if (prevNum <= numToPush) {
        return [
                subarray,
                monoIncrStack.concat([numToPush])
              ];
      }
      _monoIncrStack = monoIncrStack.slice(0, monoIncrStack.length - 1 | 0);
      _subarray = subarray.concat([prevNum]);
      continue ;
    };
  };
  var _subarray = [];
  var _monoIncrStack = [];
  var _index = 0;
  while(true) {
    var index = _index;
    var monoIncrStack = _monoIncrStack;
    var subarray = _subarray;
    if (index === arr.length) {
      return subarray.length;
    }
    var n = arr.at(index);
    var numToPush = n !== undefined ? n : -1;
    var match = updateMonoIncrStack(subarray, monoIncrStack, numToPush);
    _index = index + 1 | 0;
    _monoIncrStack = match[1];
    _subarray = match[0];
    continue ;
  };
}

var a1 = [
  1,
  2,
  3,
  10,
  4,
  2,
  3,
  5
];

var r1 = shortestSubarrayToBeRemovedToMakeArraySorted(a1);

console.log("r1: ", r1);

var a2 = [
  5,
  4,
  3,
  2,
  1
];

var r2 = shortestSubarrayToBeRemovedToMakeArraySorted(a2);

console.log("r2: ", r2);

var a3 = [
  1,
  2,
  3
];

var r3 = shortestSubarrayToBeRemovedToMakeArraySorted(a3);

console.log("r3: ", r3);

export {
  shortestSubarrayToBeRemovedToMakeArraySorted ,
  a1 ,
  r1 ,
  a2 ,
  r2 ,
  a3 ,
  r3 ,
}
/* r1 Not a pure module */
