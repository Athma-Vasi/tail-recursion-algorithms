// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";

function removeOneToMakeArrayIncreasing(nums) {
  var length = nums.length;
  var _isMonoIncr = true;
  var _monoIncrStack = [];
  var _popCount = 0;
  var _index = 0;
  while(true) {
    var index = _index;
    var popCount = _popCount;
    var monoIncrStack = _monoIncrStack;
    var isMonoIncr = _isMonoIncr;
    var stackLength = monoIncrStack.length;
    if (index === length) {
      return isMonoIncr;
    }
    var num = nums.at(index);
    var currentNum = num !== undefined ? num : Int32.min_int;
    var num$1 = monoIncrStack.at(-1);
    var previousMax = num$1 !== undefined ? num$1 : Int32.min_int;
    if (previousMax >= currentNum) {
      if (popCount === 1) {
        _monoIncrStack = monoIncrStack.slice(0, stackLength - 1 | 0);
        _isMonoIncr = false;
        continue ;
      }
      _popCount = popCount + 1 | 0;
      _monoIncrStack = monoIncrStack.slice(0, stackLength - 1 | 0);
      _isMonoIncr = isMonoIncr !== false;
      continue ;
    }
    _index = index + 1 | 0;
    _monoIncrStack = monoIncrStack.concat([currentNum]);
    continue ;
  };
}

var n1 = [
  1,
  2,
  10,
  5,
  7
];

var r1 = removeOneToMakeArrayIncreasing(n1);

console.log("r1: ", r1);

var n2 = [
  2,
  3,
  1,
  2
];

var r2 = removeOneToMakeArrayIncreasing(n2);

console.log("r2: ", r2);

var n3 = [
  1,
  1,
  1
];

var r3 = removeOneToMakeArrayIncreasing(n3);

console.log("r3: ", r3);

export {
  removeOneToMakeArrayIncreasing ,
  n1 ,
  r1 ,
  n2 ,
  r2 ,
  n3 ,
  r3 ,
}
/* r1 Not a pure module */
