// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";

function minPathSum(triangle) {
  var startIdx = triangle.length - 2 | 0;
  var a = triangle.at(startIdx);
  var start = a !== undefined ? a : [];
  console.log("\n");
  console.log("---minPathSum---");
  console.log("startIdx: ", startIdx);
  console.log("start: ", start);
  var _baseCamp = start;
  var _index = startIdx;
  while(true) {
    var index = _index;
    var baseCamp = _baseCamp;
    if (index < 0) {
      return baseCamp;
    }
    var pullEquipUp = (function(baseCamp,index){
    return function pullEquipUp(_tempBaseCamp, _innerIdx) {
      while(true) {
        var innerIdx = _innerIdx;
        var tempBaseCamp = _tempBaseCamp;
        if (innerIdx === baseCamp.length) {
          return tempBaseCamp;
        }
        var n = baseCamp.at(innerIdx);
        var person = n !== undefined ? n : Int32.min_int;
        var a = triangle.at(index + 1 | 0);
        var below = a !== undefined ? a : [];
        var n$1 = below.at(innerIdx);
        var leftEquip = n$1 !== undefined ? n$1 : Int32.min_int;
        var n$2 = below.at(innerIdx + 1 | 0);
        var rightEquip = n$2 !== undefined ? n$2 : Int32.max_int;
        var reduce = person + (
          leftEquip < rightEquip ? leftEquip : rightEquip
        ) | 0;
        var newTempBaseCamp = tempBaseCamp.concat([reduce]);
        console.log("\n");
        console.log("---pullEquipUp---");
        console.log("index: ", index);
        console.log("innerIdx: ", innerIdx);
        console.log("person: ", person);
        console.log("leftEquip: ", leftEquip);
        console.log("rightEquip: ", rightEquip);
        console.log("reduce: ", reduce);
        console.log("newTempBaseCamp: ", newTempBaseCamp);
        _innerIdx = innerIdx + 1 | 0;
        _tempBaseCamp = newTempBaseCamp;
        continue ;
      };
    }
    }(baseCamp,index));
    var newBaseCamp = pullEquipUp([], 0);
    console.log("\n");
    console.log("---climbSummit---");
    console.log("index: ", index);
    console.log("baseCamp: ", baseCamp);
    console.log("newBaseCamp: ", newBaseCamp);
    _index = index - 1 | 0;
    _baseCamp = newBaseCamp;
    continue ;
  };
}

var t4 = [
  [1],
  [
    2,
    3
  ],
  [
    4,
    5,
    6
  ]
];

var r4 = minPathSum(t4);

console.log("r4: ", r4);

export {
  minPathSum ,
  t4 ,
  r4 ,
}
/* r4 Not a pure module */
