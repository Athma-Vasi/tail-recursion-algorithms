// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";

function outerMaxOfAnOrderedTriplet_I(nums) {
  var length = nums.length;
  var outerLoop = function (_outerMax, _outerIndex) {
    while(true) {
      var outerIndex = _outerIndex;
      var outerMax = _outerMax;
      if (outerIndex === length) {
        return outerMax;
      }
      var n = nums.at(outerIndex);
      var outerNum = n !== undefined ? n : 0;
      var middleLoop = (function(outerNum){
      return function middleLoop(_middleMax, _middleIndex) {
        while(true) {
          var middleIndex = _middleIndex;
          var middleMax = _middleMax;
          if (middleIndex === length) {
            return middleMax;
          }
          var n = nums.at(middleIndex);
          var middleNum = n !== undefined ? n : 0;
          var innerLoop = (function(middleNum){
          return function innerLoop(_innerMax, _innerIndex) {
            while(true) {
              var innerIndex = _innerIndex;
              var innerMax = _innerMax;
              if (innerIndex === length) {
                return innerMax;
              }
              var n = nums.at(innerIndex);
              var innerNum = n !== undefined ? n : 0;
              var valueOfTriplet = Math.imul(outerNum - middleNum | 0, innerNum);
              _innerIndex = innerIndex + 1 | 0;
              _innerMax = innerMax > valueOfTriplet ? innerMax : valueOfTriplet;
              continue ;
            };
          }
          }(middleNum));
          var innerMax = innerLoop(middleMax, middleIndex + 1 | 0);
          _middleIndex = middleIndex + 1 | 0;
          _middleMax = middleMax > innerMax ? middleMax : innerMax;
          continue ;
        };
      }
      }(outerNum));
      var middleMax = middleLoop(outerMax, outerIndex + 1 | 0);
      _outerIndex = outerIndex + 1 | 0;
      _outerMax = outerMax > middleMax ? outerMax : middleMax;
      continue ;
    };
  };
  var maxValueOfTriplet = outerLoop(Int32.min_int, 0);
  if (maxValueOfTriplet > 0) {
    return maxValueOfTriplet;
  } else {
    return 0;
  }
}

var n1 = [
  12,
  6,
  1,
  2,
  7
];

var r1 = outerMaxOfAnOrderedTriplet_I(n1);

console.log("r1: ", r1);

var n2 = [
  1,
  10,
  3,
  4,
  19
];

var r2 = outerMaxOfAnOrderedTriplet_I(n2);

console.log("r2: ", r2);

var n3 = [
  1,
  2,
  3
];

var r3 = outerMaxOfAnOrderedTriplet_I(n3);

console.log("r3: ", r3);

export {
  outerMaxOfAnOrderedTriplet_I ,
  n1 ,
  r1 ,
  n2 ,
  r2 ,
  n3 ,
  r3 ,
}
/* r1 Not a pure module */
