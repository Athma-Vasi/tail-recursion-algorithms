// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";
import * as Core__Array from "@rescript/core/src/Core__Array.res.js";

function minimumNumberGame(nums) {
  var findMinAndIndex = function (nums) {
    return Core__Array.reduceWithIndex(nums, [
                Int32.max_int,
                -1
              ], (function (acc, num, idx) {
                  var min = acc[0];
                  if (num < min) {
                    return [
                            num,
                            idx
                          ];
                  } else {
                    return [
                            min,
                            acc[1]
                          ];
                  }
                }));
  };
  var removeNumber = function (nums, index) {
    return nums.filter(function (_num, idx) {
                return idx !== index;
              });
  };
  var _result = [];
  var _sliced = nums.slice();
  while(true) {
    var sliced = _sliced;
    var result = _result;
    if (sliced.length === 0) {
      return result;
    }
    var match = findMinAndIndex(sliced);
    var aliceSliced = removeNumber(sliced, match[1]);
    var match$1 = findMinAndIndex(aliceSliced);
    var bobSliced = removeNumber(aliceSliced, match$1[1]);
    _sliced = bobSliced;
    _result = result.concat([match$1[0]]).concat([match[0]]);
    continue ;
  };
}

var n1 = [
  5,
  4,
  2,
  3
];

var r1 = minimumNumberGame(n1);

console.log("r1: ", r1);

var n2 = [
  2,
  5
];

var r2 = minimumNumberGame(n2);

console.log("r2: ", r2);

export {
  minimumNumberGame ,
  n1 ,
  r1 ,
  n2 ,
  r2 ,
}
/* r1 Not a pure module */
