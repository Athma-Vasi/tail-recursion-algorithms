// Generated by ReScript, PLEASE EDIT WITH CARE


function findTriangularSumOfArray(nums) {
  var _sums = nums;
  while(true) {
    var sums = _sums;
    if (sums.length === 1) {
      var s = sums.at(0);
      if (s !== undefined) {
        return s;
      } else {
        return -1;
      }
    }
    var rowSums = (function(sums){
    return function rowSums(_stack, _index) {
      while(true) {
        var index = _index;
        var stack = _stack;
        if ((index + 1 | 0) >= sums.length) {
          return stack;
        }
        var value = sums.at(index);
        var curr = value !== undefined ? value : 0;
        var value$1 = sums.at(index + 1 | 0);
        var next = value$1 !== undefined ? value$1 : 0;
        var newValue = (curr + next | 0) % 10.0;
        _index = index + 1 | 0;
        _stack = stack.concat([newValue | 0]);
        continue ;
      };
    }
    }(sums));
    _sums = rowSums([], 0);
    continue ;
  };
}

var n1 = [
  1,
  2,
  3,
  4,
  5
];

var r1 = findTriangularSumOfArray(n1);

console.log("r1: ", r1);

var n2 = [5];

var r2 = findTriangularSumOfArray(n2);

console.log("r2: ", r2);

export {
  findTriangularSumOfArray ,
  n1 ,
  r1 ,
  n2 ,
  r2 ,
}
/* r1 Not a pure module */
