// Generated by ReScript, PLEASE EDIT WITH CARE


function findIndicesWithIndexAndValueDifference_I(nums, indexDifference, valueDifference) {
  var length = nums.length;
  var outerLoop = function (_answer, _outerIndex) {
    while(true) {
      var outerIndex = _outerIndex;
      var answer = _answer;
      if (outerIndex === length) {
        return answer;
      }
      var n = nums.at(outerIndex);
      var outerNum = n !== undefined ? n : -1;
      var innerLoop = (function(outerIndex,outerNum){
      return function innerLoop(_answer_, _innerIndex) {
        while(true) {
          var innerIndex = _innerIndex;
          var answer_ = _answer_;
          if (innerIndex >= length) {
            return answer_;
          }
          var n = nums.at(innerIndex);
          var innerNum = n !== undefined ? n : -1;
          if ((outerNum - innerNum | 0) >= valueDifference) {
            _innerIndex = innerIndex + 1 | 0;
            _answer_ = answer_.length === 0 ? answer_.concat([
                    outerIndex,
                    innerIndex
                  ]) : answer_;
            continue ;
          }
          _innerIndex = innerIndex + 1 | 0;
          continue ;
        };
      }
      }(outerIndex,outerNum));
      var answer_ = innerLoop(answer, outerIndex + indexDifference | 0);
      _outerIndex = outerIndex + 1 | 0;
      _answer = answer_;
      continue ;
    };
  };
  var answer = outerLoop([], 0);
  if (answer.length === 0) {
    return [
            -1,
            -1
          ];
  } else {
    return answer;
  }
}

var n1 = [
  5,
  1,
  4,
  1
];

var r1 = findIndicesWithIndexAndValueDifference_I(n1, 2, 4);

console.log("[5,1,4,1], 2, 4", r1);

var n2 = [
  2,
  1
];

var r2 = findIndicesWithIndexAndValueDifference_I(n2, 0, 0);

console.log("[2,1], 0, 0", r2);

var n3 = [
  1,
  2,
  3
];

var r3 = findIndicesWithIndexAndValueDifference_I(n3, 2, 4);

console.log("[1,2,3], 2, 4", r3);

var i1 = 2;

var v1 = 4;

var i2 = 0;

var v2 = 0;

var i3 = 2;

var v3 = 4;

export {
  findIndicesWithIndexAndValueDifference_I ,
  n1 ,
  i1 ,
  v1 ,
  r1 ,
  n2 ,
  i2 ,
  v2 ,
  r2 ,
  n3 ,
  i3 ,
  v3 ,
  r3 ,
}
/* r1 Not a pure module */
