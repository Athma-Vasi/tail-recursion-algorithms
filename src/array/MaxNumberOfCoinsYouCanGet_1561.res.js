// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Int32 from "rescript/lib/es6/int32.js";
import * as Core__Array from "@rescript/core/src/Core__Array.res.js";

function maxNumberOfCoinsYouCanGet(piles) {
  var findLargestAndIndex = function (nums) {
    return Core__Array.reduceWithIndex(nums, [
                Int32.min_int,
                -1
              ], (function (acc, num, index) {
                  var max = acc[0];
                  if (max > num) {
                    return [
                            max,
                            acc[1]
                          ];
                  } else {
                    return [
                            num,
                            index
                          ];
                  }
                }));
  };
  var findSmallestAndIndex = function (nums) {
    return Core__Array.reduceWithIndex(nums, [
                Int32.max_int,
                -1
              ], (function (acc, num, index) {
                  var min = acc[0];
                  if (min < num) {
                    return [
                            min,
                            acc[1]
                          ];
                  } else {
                    return [
                            num,
                            index
                          ];
                  }
                }));
  };
  var removeNum = function (nums, index) {
    return nums.filter(function (_num, idx) {
                return idx !== index;
              });
  };
  var _amount = 0;
  var _sliced = piles.map(function (p) {
        return p;
      });
  while(true) {
    var sliced = _sliced;
    var amount = _amount;
    if (sliced.length < 3) {
      return amount;
    }
    var match = findLargestAndIndex(sliced);
    var aliceRemoved = removeNum(sliced, match[1]);
    var match$1 = findLargestAndIndex(aliceRemoved);
    var moiRemoved = removeNum(aliceRemoved, match$1[1]);
    var match$2 = findSmallestAndIndex(moiRemoved);
    var bobRemoved = removeNum(moiRemoved, match$2[1]);
    _sliced = bobRemoved;
    _amount = amount + match$1[0] | 0;
    continue ;
  };
}

var p1 = [
  2,
  4,
  1,
  2,
  7,
  8
];

var r1 = maxNumberOfCoinsYouCanGet(p1);

console.log("r1: ", r1);

var p2 = [
  2,
  4,
  5
];

var r2 = maxNumberOfCoinsYouCanGet(p2);

console.log("r2: ", r2);

var p3 = [
  9,
  8,
  7,
  6,
  5,
  1,
  2,
  3,
  4
];

var r3 = maxNumberOfCoinsYouCanGet(p3);

console.log("r3: ", r3);

export {
  maxNumberOfCoinsYouCanGet ,
  p1 ,
  r1 ,
  p2 ,
  r2 ,
  p3 ,
  r3 ,
}
/* r1 Not a pure module */
