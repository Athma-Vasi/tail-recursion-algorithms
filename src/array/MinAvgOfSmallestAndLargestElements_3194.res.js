// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Array from "@rescript/core/src/Core__Array.res.js";

function minAvgOfSmallestAndLargestElements(nums) {
  var _averages = [];
  var _shrunkNums = nums;
  var _count = 0;
  while(true) {
    var count = _count;
    var shrunkNums = _shrunkNums;
    var averages = _averages;
    if (count > (nums.length / 2 | 0)) {
      return Core__Array.reduce(averages, 51.0, (function (min, num) {
                    if (min < num) {
                      return min;
                    } else {
                      return num;
                    }
                  }));
    }
    var match = Core__Array.reduce(shrunkNums, [
          51,
          0
        ], (function (tuple, num) {
            var max = tuple[1];
            var min = tuple[0];
            var newMin = min < num ? min : num;
            var newMax = max > num ? max : num;
            return [
                    newMin,
                    newMax
                  ];
          }));
    var maxElement = match[1];
    var minElement = match[0];
    var average = (minElement + maxElement) / 2.0;
    var minIndex = shrunkNums.findIndex((function(minElement){
        return function (num) {
          return num === minElement;
        }
        }(minElement)));
    var maxIndex = shrunkNums.findIndex((function(maxElement){
        return function (num) {
          return num === maxElement;
        }
        }(maxElement)));
    _count = count + 1 | 0;
    _shrunkNums = shrunkNums.filter((function(minIndex,maxIndex){
        return function (_num, index) {
          if (index !== minIndex) {
            return index !== maxIndex;
          } else {
            return false;
          }
        }
        }(minIndex,maxIndex)));
    _averages = averages.concat([average]);
    continue ;
  };
}

var n1 = [
  7,
  8,
  3,
  4,
  15,
  13,
  4,
  1
];

var r1 = minAvgOfSmallestAndLargestElements(n1);

console.log("r1: ", r1);

var n2 = [
  1,
  9,
  8,
  3,
  10,
  5
];

var r2 = minAvgOfSmallestAndLargestElements(n2);

console.log("r2: ", r2);

var n3 = [
  1,
  2,
  3,
  7,
  8,
  9
];

var r3 = minAvgOfSmallestAndLargestElements(n3);

console.log("r3: ", r3);

export {
  minAvgOfSmallestAndLargestElements ,
  n1 ,
  r1 ,
  n2 ,
  r2 ,
  n3 ,
  r3 ,
}
/* r1 Not a pure module */
