// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Array from "@rescript/core/src/Core__Array.res.js";

function findNumberOfWinningPlayers(_n, picks) {
  var table = new Map();
  var _index = 0;
  while(true) {
    var index = _index;
    if (index === picks.length) {
      return Core__Array.reduce(Array.from(table.entries()), 0, (function (acc, param) {
                    var player = param[0];
                    return Core__Array.reduce(Array.from(param[1].entries()), acc, (function (acc_, param) {
                                  if (param[1] === (player + 1 | 0)) {
                                    return acc_ + 1 | 0;
                                  } else {
                                    return acc_;
                                  }
                                }));
                  }));
    }
    var tuple = picks.at(index);
    var match = tuple !== undefined ? tuple : [
        -1,
        -1
      ];
    var ballColor = match[1];
    var player = match[0];
    var m = table.get(player);
    var colorCounts = m !== undefined ? Caml_option.valFromOption(m) : new Map();
    var c = colorCounts.get(ballColor);
    var colorCount = c !== undefined ? c : 0;
    colorCounts.set(ballColor, colorCount + 1 | 0);
    table.set(player, colorCounts);
    _index = index + 1 | 0;
    continue ;
  };
}

var p1 = [
  [
    0,
    0
  ],
  [
    1,
    0
  ],
  [
    1,
    0
  ],
  [
    2,
    1
  ],
  [
    2,
    1
  ],
  [
    2,
    0
  ]
];

var r1 = findNumberOfWinningPlayers(4, p1);

console.log("r1: ", r1);

var p2 = [
  [
    1,
    1
  ],
  [
    1,
    2
  ],
  [
    1,
    3
  ],
  [
    1,
    4
  ]
];

var r2 = findNumberOfWinningPlayers(5, p2);

console.log("r2: ", r2);

var p3 = [
  [
    1,
    1
  ],
  [
    2,
    4
  ],
  [
    2,
    4
  ],
  [
    2,
    4
  ]
];

var r3 = findNumberOfWinningPlayers(5, p3);

console.log("r3: ", r3);

var n1 = 4;

var n2 = 5;

var n3 = 5;

export {
  findNumberOfWinningPlayers ,
  n1 ,
  p1 ,
  r1 ,
  n2 ,
  p2 ,
  r2 ,
  n3 ,
  p3 ,
  r3 ,
}
/* r1 Not a pure module */
