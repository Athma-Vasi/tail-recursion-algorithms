// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Array from "@rescript/core/src/Core__Array.res.js";

function appleRedistributionIntoBoxes(apples, capacities) {
  var total = Core__Array.reduce(apples, 0, (function (total, apple) {
          return total + apple | 0;
        }));
  var sortedCapacitiesDesc = capacities.toSorted(function (a, b) {
        return b - a | 0;
      });
  var _boxes = 0;
  var _capacities = sortedCapacitiesDesc;
  var _total = total;
  while(true) {
    var total$1 = _total;
    var capacities$1 = _capacities;
    var boxes = _boxes;
    var capLength = capacities$1.length;
    if (total$1 < 1 || capLength === 0) {
      return boxes;
    }
    var b = capacities$1.at(0);
    var box = b !== undefined ? b : 0;
    if (total$1 >= box) {
      _total = total$1 - box | 0;
      _capacities = capacities$1.slice(1, capLength);
      _boxes = boxes + 1 | 0;
      continue ;
    }
    var newCapacity = box - total$1 | 0;
    capacities$1[0] = newCapacity;
    _total = 0;
    _boxes = boxes + 1 | 0;
    continue ;
  };
}

var a1 = [
  1,
  3,
  2
];

var c1 = [
  4,
  3,
  1,
  5,
  2
];

var r1 = appleRedistributionIntoBoxes(a1, c1);

console.log("r1: ", r1);

var a2 = [
  5,
  5,
  5
];

var c2 = [
  2,
  4,
  2,
  7
];

var r2 = appleRedistributionIntoBoxes(a2, c2);

console.log("r2: ", r2);

export {
  appleRedistributionIntoBoxes ,
  a1 ,
  c1 ,
  r1 ,
  a2 ,
  c2 ,
  r2 ,
}
/* r1 Not a pure module */
