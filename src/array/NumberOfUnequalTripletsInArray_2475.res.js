// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Option from "@rescript/core/src/Core__Option.res.js";

function numberOfUnequalTripletsInArray(nums) {
  var length = nums.length;
  var _outerCount = 0;
  var _outerIndex = 0;
  while(true) {
    var outerIndex = _outerIndex;
    var outerCount = _outerCount;
    if (outerIndex === length) {
      return outerCount;
    }
    var outerNum = Core__Option.mapOr(nums.at(outerIndex), -1, (function (n) {
            return n;
          }));
    var middleLoop = (function(outerNum){
    return function middleLoop(_middleCount, _middleIndex) {
      while(true) {
        var middleIndex = _middleIndex;
        var middleCount = _middleCount;
        if (middleIndex === length) {
          return middleCount;
        }
        var middleNum = Core__Option.mapOr(nums.at(middleIndex), -1, (function (n) {
                return n;
              }));
        var innerLoop = (function(middleNum){
        return function innerLoop(_innerCount, _innerIndex) {
          while(true) {
            var innerIndex = _innerIndex;
            var innerCount = _innerCount;
            if (innerIndex === length) {
              return innerCount;
            }
            var innerNum = Core__Option.mapOr(nums.at(innerIndex), -1, (function (n) {
                    return n;
                  }));
            if (outerNum !== middleNum && middleNum !== innerNum && outerNum !== innerNum) {
              _innerIndex = innerIndex + 1 | 0;
              _innerCount = innerCount + 1 | 0;
              continue ;
            }
            _innerIndex = innerIndex + 1 | 0;
            continue ;
          };
        }
        }(middleNum));
        var innerCount = innerLoop(middleCount, middleIndex + 1 | 0);
        _middleIndex = middleIndex + 1 | 0;
        _middleCount = innerCount;
        continue ;
      };
    }
    }(outerNum));
    var middleCount = middleLoop(outerCount, outerIndex + 1 | 0);
    _outerIndex = outerIndex + 1 | 0;
    _outerCount = middleCount;
    continue ;
  };
}

var n1 = [
  4,
  4,
  2,
  4,
  3
];

var r1 = numberOfUnequalTripletsInArray(n1);

console.log("r1: ", r1);

var n2 = [
  1,
  1,
  1,
  1,
  1
];

var r2 = numberOfUnequalTripletsInArray(n2);

console.log("r2: ", r2);

export {
  numberOfUnequalTripletsInArray ,
  n1 ,
  r1 ,
  n2 ,
  r2 ,
}
/* r1 Not a pure module */
